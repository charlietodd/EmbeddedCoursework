

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 18:13:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.32
    31                           ; Generated 02/02/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0088                     	;# 
   465  0089                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485                           
   486                           	psect	idataBANK0
   487  052C                     __pidataBANK0:
   488                           
   489                           ;initializer for read_keys@F885
   490  052C  3400               	retlw	0
   491  052D  3400               	retlw	0
   492  052E  3401               	retlw	1
   493  052F  3400               	retlw	0
   494  0530  3402               	retlw	2
   495  0531  3400               	retlw	0
   496  0532  3403               	retlw	3
   497  0533  3400               	retlw	0
   498                           
   499                           ;initializer for _time
   500  0534  3448               	retlw	72
   501  0535  3445               	retlw	69
   502  0536  344C               	retlw	76
   503  0537  344C               	retlw	76
   504  0538  344F               	retlw	79
   505  0539  3421               	retlw	33
   506                           
   507                           ;initializer for getSecs@F1094
   508  053A  3420               	retlw	32
   509  053B  3420               	retlw	32
   510  053C  3400               	retlw	0
   511                           
   512                           ;initializer for getMins@F1090
   513  053D  3420               	retlw	32
   514  053E  3420               	retlw	32
   515  053F  3400               	retlw	0
   516                           
   517                           ;initializer for getHour@F1086
   518  0540  3420               	retlw	32
   519  0541  3420               	retlw	32
   520  0542  3400               	retlw	0
   521                           
   522                           ;initializer for _hr
   523  0543  3430               	retlw	48
   524                           
   525                           ;initializer for _hr10
   526  0544  3430               	retlw	48
   527                           
   528                           ;initializer for _min
   529  0545  3430               	retlw	48
   530                           
   531                           ;initializer for _min10
   532  0546  3430               	retlw	48
   533                           
   534                           ;initializer for _sec
   535  0547  3430               	retlw	48
   536                           
   537                           ;initializer for _sec10
   538  0548  3430               	retlw	48
   539                           
   540                           	psect	idataBANK1
   541  0494                     __pidataBANK1:
   542                           
   543                           ;initializer for read_keys@F883
   544  0494  3437               	retlw	55
   545  0495  3438               	retlw	56
   546  0496  3439               	retlw	57
   547  0497  3455               	retlw	85
   548  0498  3434               	retlw	52
   549  0499  3435               	retlw	53
   550  049A  3436               	retlw	54
   551  049B  3444               	retlw	68
   552  049C  3431               	retlw	49
   553  049D  3432               	retlw	50
   554  049E  3433               	retlw	51
   555  049F  3423               	retlw	35
   556  04A0  342D               	retlw	45
   557  04A1  3430               	retlw	48
   558  04A2  342B               	retlw	43
   559  04A3  3423               	retlw	35
   560  0008                     _PORTD	set	8
   561  0035                     _RB5	set	53
   562  0034                     _RB4	set	52
   563  0032                     _RB2	set	50
   564  0030                     _RB0	set	48
   565  003D                     _RC5	set	61
   566  003E                     _RC6	set	62
   567  003F                     _RC7	set	63
   568  0029                     _RA1	set	41
   569  0048                     _RE0	set	72
   570  004A                     _RE2	set	74
   571  0049                     _RE1	set	73
   572  0047                     _RD7	set	71
   573  002D                     _RA5	set	45
   574  002B                     _RA3	set	43
   575  002A                     _RA2	set	42
   576  0087                     _TRISC	set	135
   577  0089                     _TRISE	set	137
   578  0088                     _TRISD	set	136
   579  0085                     _TRISA	set	133
   580  009F                     _ADCON1	set	159
   581                           
   582                           	psect	strings
   583  0003                     __pstrings:
   584  0003                     stringtab:
   585  0003                     __stringtab:
   586  0003                     stringcode:	
   587                           ;	String table - string pointers are 1 byte each
   588                           
   589  0003                     stringdir:
   590  0003  3000               	movlw	high stringdir
   591  0004  008A               	movwf	10
   592  0005  0804               	movf	4,w
   593  0006  0A84               	incf	4,f
   594  0007  0782               	addwf	2,f
   595  0008                     __stringbase:
   596  0008  3400               	retlw	0
   597  0009                     __end_of__stringtab:
   598  0009                     STR_1:
   599  0009  3468               	retlw	104	;'h'
   600  000A  3465               	retlw	101	;'e'
   601  000B  346C               	retlw	108	;'l'
   602  000C  346C               	retlw	108	;'l'
   603  000D  346F               	retlw	111	;'o'
   604  000E  3420               	retlw	32	;' '
   605  000F  3477               	retlw	119	;'w'
   606  0010  346F               	retlw	111	;'o'
   607  0011  3472               	retlw	114	;'r'
   608  0012  346C               	retlw	108	;'l'
   609  0013  3464               	retlw	100	;'d'
   610  0014  343A               	retlw	58	;':'
   611  0015  3420               	retlw	32	;' '
   612  0016  3400               	retlw	0
   613                           
   614                           	psect	cinit
   615  07D4                     start_initialization:	
   616                           ; #config settings
   617                           
   618  07D4                     __initialization:
   619                           
   620                           ; Initialize objects allocated to BANK1
   621  07D4  1383               	bcf	3,7	;select IRP bank0
   622  07D5  30B0               	movlw	low (__pdataBANK1+16)
   623  07D6  00FD               	movwf	btemp+-1
   624  07D7  3004               	movlw	high __pidataBANK1
   625  07D8  00FE               	movwf	btemp
   626  07D9  3094               	movlw	low __pidataBANK1
   627  07DA  00FF               	movwf	btemp+1
   628  07DB  30A0               	movlw	low __pdataBANK1
   629  07DC  0084               	movwf	4
   630  07DD  120A  118A  24BA  120A  118A  	fcall	init_ram0
   631                           
   632                           ; Initialize objects allocated to BANK0
   633  07E2  305B               	movlw	low (__pdataBANK0+29)
   634  07E3  00FD               	movwf	btemp+-1
   635  07E4  3005               	movlw	high __pidataBANK0
   636  07E5  00FE               	movwf	btemp
   637  07E6  302C               	movlw	low __pidataBANK0
   638  07E7  00FF               	movwf	btemp+1
   639  07E8  303E               	movlw	low __pdataBANK0
   640  07E9  0084               	movwf	4
   641  07EA  120A  118A  24BA  120A  118A  	fcall	init_ram0
   642                           
   643                           ; Clear objects allocated to BANK0
   644  07EF  01DB               	clrf	__pbssBANK0& (0+127)
   645  07F0  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   646  07F1  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   647  07F2  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   648  07F3  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   649  07F4  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   650  07F5  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   651  07F6  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   652  07F7  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   653  07F8  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   654  07F9  01E5               	clrf	(__pbssBANK0+10)& (0+127)
   655  07FA  01E6               	clrf	(__pbssBANK0+11)& (0+127)
   656  07FB  01E7               	clrf	(__pbssBANK0+12)& (0+127)
   657  07FC                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  07FC                     __end_of__initialization:
   661  07FC  0183               	clrf	3
   662  07FD  120A  118A  2DE9   	ljmp	_main	;jump to C main() function
   663                           
   664                           	psect	bssBANK0
   665  005B                     __pbssBANK0:
   666  005B                     _s1:
   667  005B                     	ds	2
   668  005D                     _s10:
   669  005D                     	ds	2
   670  005F                     _tmp:
   671  005F                     	ds	1
   672  0060                     _seconds1old:
   673  0060                     	ds	1
   674  0061                     _seconds1:
   675  0061                     	ds	1
   676  0062                     _seconds10:
   677  0062                     	ds	1
   678  0063                     _minutes1:
   679  0063                     	ds	1
   680  0064                     _minutes10:
   681  0064                     	ds	1
   682  0065                     _hours1:
   683  0065                     	ds	1
   684  0066                     _hours10:
   685  0066                     	ds	1
   686  0067                     _hours:
   687  0067                     	ds	1
   688                           
   689                           	psect	dataBANK0
   690  003E                     __pdataBANK0:
   691  003E                     read_keys@F885:
   692  003E                     	ds	8
   693  0046                     _time:
   694  0046                     	ds	6
   695  004C                     getSecs@F1094:
   696  004C                     	ds	3
   697  004F                     getMins@F1090:
   698  004F                     	ds	3
   699  0052                     getHour@F1086:
   700  0052                     	ds	3
   701  0055                     _hr:
   702  0055                     	ds	1
   703  0056                     _hr10:
   704  0056                     	ds	1
   705  0057                     _min:
   706  0057                     	ds	1
   707  0058                     _min10:
   708  0058                     	ds	1
   709  0059                     _sec:
   710  0059                     	ds	1
   711  005A                     _sec10:
   712  005A                     	ds	1
   713                           
   714                           	psect	dataBANK1
   715  00A0                     __pdataBANK1:
   716  00A0                     read_keys@F883:
   717  00A0                     	ds	16
   718                           
   719                           	psect	inittext
   720  04B6                     init_fetch0:	
   721                           ;	Called with low address in FSR and high address in W
   722                           
   723  04B6  087E               	movf	btemp,w
   724  04B7  008A               	movwf	10
   725  04B8  087F               	movf	btemp+1,w
   726  04B9  0082               	movwf	2
   727  04BA                     init_ram0:	
   728                           ;Called with:
   729                           ;	high address of idata address in btemp 
   730                           ;	low address of idata address in btemp+1 
   731                           ;	low address of data in FSR
   732                           ;	high address + 1 of data in btemp-1
   733                           
   734  04BA  120A  118A  24B6  120A  118A  	fcall	init_fetch0
   735  04BF  0080               	movwf	0
   736  04C0  0A84               	incf	4,f
   737  04C1  0804               	movf	4,w
   738  04C2  067D               	xorwf	btemp+-1,w
   739  04C3  1903               	btfsc	3,2
   740  04C4  3400               	retlw	0
   741  04C5  0AFF               	incf	btemp+1,f
   742  04C6  1903               	btfsc	3,2
   743  04C7  0AFE               	incf	btemp,f
   744  04C8  2CBA               	goto	init_ram0
   745                           
   746                           	psect	cstackCOMMON
   747  0070                     __pcstackCOMMON:
   748  0070                     ?_init_display:
   749  0070                     ?_clear_display:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_init_keyboard:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ??_init_keyboard:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_read_keys:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_read_keys:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_delay_xy:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_delay:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_delay:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_main:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_write_cmd:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_write_data:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_strlen:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     delay@i:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     delay_xy@x:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 2 bytes @ 0x0
   793  0070                     	ds	2
   794  0072                     ??_strlen:
   795  0072                     ??_write_cmd:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     ??_write_data:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     write_cmd@cmd:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     write_data@data:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0072                     delay_xy@y:	
   808                           ; 1 bytes @ 0x2
   809                           
   810                           
   811                           ; 2 bytes @ 0x2
   812  0072                     	ds	1
   813  0073                     ??_clear_display:
   814  0073                     strlen@s:	
   815                           ; 1 bytes @ 0x3
   816                           
   817                           
   818                           ; 1 bytes @ 0x3
   819  0073                     	ds	1
   820  0074                     ??_delay_xy:
   821  0074                     strlen@cp:	
   822                           ; 1 bytes @ 0x4
   823                           
   824                           
   825                           ; 1 bytes @ 0x4
   826  0074                     	ds	1
   827  0075                     delay_xy@i:
   828                           
   829                           ; 2 bytes @ 0x5
   830  0075                     	ds	2
   831  0077                     delay_xy@j:
   832                           
   833                           ; 2 bytes @ 0x7
   834  0077                     	ds	2
   835  0079                     ??_init_display:
   836  0079                     ?_move_cursor:	
   837                           ; 1 bytes @ 0x9
   838                           
   839  0079                     move_cursor@position:	
   840                           ; 1 bytes @ 0x9
   841                           
   842                           
   843                           ; 2 bytes @ 0x9
   844  0079                     	ds	2
   845  007B                     ??_move_cursor:
   846                           
   847                           ; 1 bytes @ 0xB
   848  007B                     	ds	1
   849  007C                     ??_write_string_at_pos:
   850  007C                     ??_write_char_at_pos:	
   851                           ; 1 bytes @ 0xC
   852                           
   853  007C                     write_string_at_pos@i:	
   854                           ; 1 bytes @ 0xC
   855                           
   856                           
   857                           ; 2 bytes @ 0xC
   858  007C                     	ds	2
   859                           
   860                           	psect	cstackBANK0
   861  0020                     __pcstackBANK0:
   862  0020                     move_cursor@i:
   863  0020                     read_keys@keypad:	
   864                           ; 2 bytes @ 0x0
   865                           
   866                           
   867                           ; 16 bytes @ 0x0
   868  0020                     	ds	2
   869  0022                     move_cursor@i_124:
   870                           
   871                           ; 2 bytes @ 0x2
   872  0022                     	ds	2
   873  0024                     ?_write_string_at_pos:
   874  0024                     ?_write_char_at_pos:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0024                     write_string_at_pos@position:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0024                     write_char_at_pos@position:	
   881                           ; 2 bytes @ 0x4
   882                           
   883                           
   884                           ; 2 bytes @ 0x4
   885  0024                     	ds	2
   886  0026                     write_string_at_pos@text:
   887  0026                     write_char_at_pos@character:	
   888                           ; 1 bytes @ 0x6
   889                           
   890                           
   891                           ; 1 bytes @ 0x6
   892  0026                     	ds	10
   893  0030                     read_keys@i:
   894                           
   895                           ; 2 bytes @ 0x10
   896  0030                     	ds	2
   897  0032                     read_keys@swIndexes:
   898                           
   899                           ; 8 bytes @ 0x12
   900  0032                     	ds	8
   901  003A                     ??_main:
   902                           
   903                           ; 1 bytes @ 0x1A
   904  003A                     	ds	1
   905  003B                     main@test:
   906                           
   907                           ; 1 bytes @ 0x1B
   908  003B                     	ds	1
   909  003C                     main@currentPos:
   910                           
   911                           ; 2 bytes @ 0x1C
   912  003C                     	ds	2
   913                           
   914                           	psect	maintext
   915  05E9                     __pmaintext:	
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 18 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  test            1   27[BANK0 ] unsigned char 
   926 ;;  currentPos      2   28[BANK0 ] int 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       3       0       0       0
   938 ;;      Temps:          0       1       0       0       0
   939 ;;      Totals:         0       4       0       0       0
   940 ;;Total ram usage:        4 bytes
   941 ;; Hardware stack levels required when called: 4
   942 ;; This function calls:
   943 ;;		_clear_display
   944 ;;		_delay_xy
   945 ;;		_init_display
   946 ;;		_init_keyboard
   947 ;;		_read_keys
   948 ;;		_write_char_at_pos
   949 ;;		_write_string_at_pos
   950 ;; This function is called by:
   951 ;;		Startup code after reset
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _main
   957  05E9                     _main:
   958  05E9                     l1584:	
   959                           ;incstack = 0
   960                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   961                           
   962                           
   963                           ;main.c: 20:             write_char_at_pos(currentPos, test);
   964  05E9  3007               	movlw	7
   965  05EA  1683               	bsf	3,5	;RP0=1, select bank1
   966  05EB  1303               	bcf	3,6	;RP1=0, select bank1
   967  05EC  009F               	movwf	31	;volatile
   968  05ED                     l1586:
   969                           
   970                           ;main.c: 21:             if(currentPos != 31){
   971  05ED  0185               	clrf	5	;volatile
   972  05EE                     l1588:
   973                           
   974                           ;main.c: 22:              ++currentPos;
   975  05EE  0188               	clrf	8	;volatile
   976  05EF                     l1590:
   977                           
   978                           ;main.c: 24:             else{
   979  05EF  120A  118A  25AF  120A  118A  	fcall	_init_display
   980  05F4                     l1592:
   981                           
   982                           ;main.c: 25:                 currentPos = 16;
   983  05F4  120A  118A  2485  120A  118A  	fcall	_clear_display
   984  05F9                     l1594:
   985                           
   986                           ;main.c: 26:             }
   987  05F9  3000               	movlw	0
   988  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   989  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   990  05FC  00A4               	movwf	write_string_at_pos@position
   991  05FD  00A5               	movwf	write_string_at_pos@position+1
   992  05FE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   993  05FF  00BA               	movwf	??_main
   994  0600  083A               	movf	??_main,w
   995  0601  00A6               	movwf	write_string_at_pos@text
   996  0602  120A  118A  2579  120A  118A  	fcall	_write_string_at_pos
   997  0607                     l1596:
   998                           
   999                           ;main.c: 27:         }
  1000  0607  3010               	movlw	16
  1001  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1003  060A  00BC               	movwf	main@currentPos
  1004  060B  3000               	movlw	0
  1005  060C  00BD               	movwf	main@currentPos+1
  1006  060D                     l1598:
  1007                           
  1008                           ;main.c: 30: }
  1009  060D  120A  118A  248C  120A  118A  	fcall	_init_keyboard
  1010  0612                     l1600:
  1011  0612  120A  118A  2705  120A  118A  	fcall	_read_keys
  1012  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0619  00BA               	movwf	??_main
  1015  061A  083A               	movf	??_main,w
  1016  061B  00BB               	movwf	main@test
  1017  061C                     l1602:
  1018  061C  3023               	movlw	35
  1019  061D  063B               	xorwf	main@test,w
  1020  061E  1903               	btfsc	3,2
  1021  061F  2E21               	goto	u591
  1022  0620  2E22               	goto	u590
  1023  0621                     u591:
  1024  0621  2E43               	goto	l1612
  1025  0622                     u590:
  1026  0622                     l1604:
  1027  0622  083D               	movf	main@currentPos+1,w
  1028  0623  00A5               	movwf	write_char_at_pos@position+1
  1029  0624  083C               	movf	main@currentPos,w
  1030  0625  00A4               	movwf	write_char_at_pos@position
  1031  0626  083B               	movf	main@test,w
  1032  0627  00BA               	movwf	??_main
  1033  0628  083A               	movf	??_main,w
  1034  0629  00A6               	movwf	write_char_at_pos@character
  1035  062A  120A  118A  24C9  120A  118A  	fcall	_write_char_at_pos
  1036  062F                     l1606:
  1037  062F  301F               	movlw	31
  1038  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0632  063C               	xorwf	main@currentPos,w
  1041  0633  043D               	iorwf	main@currentPos+1,w
  1042  0634  1903               	btfsc	3,2
  1043  0635  2E37               	goto	u601
  1044  0636  2E38               	goto	u600
  1045  0637                     u601:
  1046  0637  2E3F               	goto	l1610
  1047  0638                     u600:
  1048  0638                     l1608:
  1049  0638  3001               	movlw	1
  1050  0639  07BC               	addwf	main@currentPos,f
  1051  063A  1803               	skipnc
  1052  063B  0ABD               	incf	main@currentPos+1,f
  1053  063C  3000               	movlw	0
  1054  063D  07BD               	addwf	main@currentPos+1,f
  1055  063E  2E43               	goto	l1612
  1056  063F                     l1610:
  1057  063F  3010               	movlw	16
  1058  0640  00BC               	movwf	main@currentPos
  1059  0641  3000               	movlw	0
  1060  0642  00BD               	movwf	main@currentPos+1
  1061  0643                     l1612:
  1062  0643  300A               	movlw	10
  1063  0644  00F0               	movwf	delay_xy@x
  1064  0645  3000               	movlw	0
  1065  0646  00F1               	movwf	delay_xy@x+1
  1066  0647  3064               	movlw	100
  1067  0648  00F2               	movwf	delay_xy@y
  1068  0649  3000               	movlw	0
  1069  064A  00F3               	movwf	delay_xy@y+1
  1070  064B  120A  118A  2549  120A  118A  	fcall	_delay_xy
  1071  0650  2E0D               	goto	l1598
  1072  0651  120A  118A  2800   	ljmp	start
  1073  0654                     __end_of_main:
  1074                           
  1075                           	psect	text1
  1076  0579                     __ptext1:	
  1077 ;; *************** function _write_string_at_pos *****************
  1078 ;; Defined at:
  1079 ;;		line 48 in file "LcdDriver.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  position        2    4[BANK0 ] int 
  1082 ;;  text            1    6[BANK0 ] PTR unsigned char 
  1083 ;;		 -> STR_1(14), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  i               2   12[COMMON] int 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       3       0       0       0
  1096 ;;      Locals:         2       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         2       3       0       0       0
  1099 ;;Total ram usage:        5 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 3
  1102 ;; This function calls:
  1103 ;;		_move_cursor
  1104 ;;		_strlen
  1105 ;;		_write_data
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _write_string_at_pos
  1113  0579                     _write_string_at_pos:
  1114  0579                     l1400:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _write_string_at_pos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1117                           
  1118                           
  1119                           ;LcdDriver.c: 48: void write_string_at_pos(int position, char text[]);LcdDriver.c: 49: {
      +                          ;LcdDriver.c: 50:     move_cursor(position);
  1120  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1121  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1122  057B  0825               	movf	write_string_at_pos@position+1,w
  1123  057C  00FA               	movwf	move_cursor@position+1
  1124  057D  0824               	movf	write_string_at_pos@position,w
  1125  057E  00F9               	movwf	move_cursor@position
  1126  057F  120A  118A  2654  120A  118A  	fcall	_move_cursor
  1127  0584                     l1402:
  1128                           
  1129                           ;LcdDriver.c: 51:     for(int i=0; i<strlen(text); i++)
  1130  0584  01FC               	clrf	write_string_at_pos@i
  1131  0585  01FD               	clrf	write_string_at_pos@i+1
  1132  0586  2D9C               	goto	l1408
  1133  0587                     l1404:
  1134                           
  1135                           ;LcdDriver.c: 52:     {;LcdDriver.c: 53:         write_data(text[i]);
  1136  0587  087C               	movf	write_string_at_pos@i,w
  1137  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1139  058A  0726               	addwf	write_string_at_pos@text,w
  1140  058B  0084               	movwf	4
  1141  058C  120A  118A  2003  120A  118A  	fcall	stringdir
  1142  0591  120A  118A  24F6  120A  118A  	fcall	_write_data
  1143  0596                     l1406:
  1144                           
  1145                           ;LcdDriver.c: 54:     }
  1146  0596  3001               	movlw	1
  1147  0597  07FC               	addwf	write_string_at_pos@i,f
  1148  0598  1803               	skipnc
  1149  0599  0AFD               	incf	write_string_at_pos@i+1,f
  1150  059A  3000               	movlw	0
  1151  059B  07FD               	addwf	write_string_at_pos@i+1,f
  1152  059C                     l1408:
  1153  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1154  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1155  059E  0826               	movf	write_string_at_pos@text,w
  1156  059F  120A  118A  250F  120A  118A  	fcall	_strlen
  1157  05A4  0871               	movf	?_strlen+1,w
  1158  05A5  027D               	subwf	write_string_at_pos@i+1,w
  1159  05A6  1D03               	skipz
  1160  05A7  2DAA               	goto	u455
  1161  05A8  0870               	movf	?_strlen,w
  1162  05A9  027C               	subwf	write_string_at_pos@i,w
  1163  05AA                     u455:
  1164  05AA  1C03               	skipc
  1165  05AB  2DAD               	goto	u451
  1166  05AC  2DAE               	goto	u450
  1167  05AD                     u451:
  1168  05AD  2D87               	goto	l1404
  1169  05AE                     u450:
  1170  05AE                     l102:
  1171  05AE  0008               	return
  1172  05AF                     __end_of_write_string_at_pos:
  1173                           
  1174                           	psect	text2
  1175  050F                     __ptext2:	
  1176 ;; *************** function _strlen *****************
  1177 ;; Defined at:
  1178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  s               1    wreg     PTR const unsigned char 
  1181 ;;		 -> STR_1(14), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  s               1    3[COMMON] PTR const unsigned char 
  1184 ;;		 -> STR_1(14), 
  1185 ;;  cp              1    4[COMMON] PTR const unsigned char 
  1186 ;;		 -> STR_1(14), 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    0[COMMON] unsigned int 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         2       0       0       0       0
  1197 ;;      Locals:         2       0       0       0       0
  1198 ;;      Temps:          1       0       0       0       0
  1199 ;;      Totals:         5       0       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used: 2
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_write_string_at_pos
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _strlen
  1211  050F                     _strlen:
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  1215                           ;strlen@s stored from wreg
  1216  050F  00F3               	movwf	strlen@s
  1217  0510                     l1386:
  1218  0510  0873               	movf	strlen@s,w
  1219  0511  00F2               	movwf	??_strlen
  1220  0512  0872               	movf	??_strlen,w
  1221  0513  00F4               	movwf	strlen@cp
  1222  0514  2D19               	goto	l1390
  1223  0515                     l1388:
  1224  0515  3001               	movlw	1
  1225  0516  00F2               	movwf	??_strlen
  1226  0517  0872               	movf	??_strlen,w
  1227  0518  07F4               	addwf	strlen@cp,f
  1228  0519                     l1390:
  1229  0519  0874               	movf	strlen@cp,w
  1230  051A  0084               	movwf	4
  1231  051B  120A  118A  2003  120A  118A  	fcall	stringdir
  1232  0520  3A00               	xorlw	0
  1233  0521  1D03               	skipz
  1234  0522  2D24               	goto	u441
  1235  0523  2D25               	goto	u440
  1236  0524                     u441:
  1237  0524  2D15               	goto	l1388
  1238  0525                     u440:
  1239  0525                     l1392:
  1240  0525  0873               	movf	strlen@s,w
  1241  0526  0274               	subwf	strlen@cp,w
  1242  0527  00F0               	movwf	?_strlen
  1243  0528  01F1               	clrf	?_strlen+1
  1244  0529  1BF0               	btfsc	?_strlen,7
  1245  052A  03F1               	decf	?_strlen+1,f
  1246  052B                     l848:
  1247  052B  0008               	return
  1248  052C                     __end_of_strlen:
  1249                           
  1250                           	psect	text3
  1251  04C9                     __ptext3:	
  1252 ;; *************** function _write_char_at_pos *****************
  1253 ;; Defined at:
  1254 ;;		line 57 in file "LcdDriver.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  position        2    4[BANK0 ] int 
  1257 ;;  character       1    6[BANK0 ] unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       3       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       3       0       0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 3
  1276 ;; This function calls:
  1277 ;;		_move_cursor
  1278 ;;		_write_data
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _write_char_at_pos
  1286  04C9                     _write_char_at_pos:
  1287  04C9                     l1474:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _write_char_at_pos: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1290                           
  1291                           
  1292                           ;LcdDriver.c: 58:     move_cursor(position);
  1293  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1294  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1295  04CB  0825               	movf	write_char_at_pos@position+1,w
  1296  04CC  00FA               	movwf	move_cursor@position+1
  1297  04CD  0824               	movf	write_char_at_pos@position,w
  1298  04CE  00F9               	movwf	move_cursor@position
  1299  04CF  120A  118A  2654  120A  118A  	fcall	_move_cursor
  1300  04D4                     l1476:
  1301                           
  1302                           ;LcdDriver.c: 59:     write_data(character);
  1303  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1304  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1305  04D6  0826               	movf	write_char_at_pos@character,w
  1306  04D7  120A  118A  24F6  120A  118A  	fcall	_write_data
  1307  04DC                     l105:
  1308  04DC  0008               	return
  1309  04DD                     __end_of_write_char_at_pos:
  1310                           
  1311                           	psect	text4
  1312  04F6                     __ptext4:	
  1313 ;; *************** function _write_data *****************
  1314 ;; Defined at:
  1315 ;;		line 25 in file "LcdDriver.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  data            1    wreg     unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  data            1    2[COMMON] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         1       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0
  1332 ;;      Totals:         1       0       0       0       0
  1333 ;;Total ram usage:        1 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 1
  1336 ;; This function calls:
  1337 ;;		_delay
  1338 ;; This function is called by:
  1339 ;;		_write_string_at_pos
  1340 ;;		_write_char_at_pos
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _write_data
  1346  04F6                     _write_data:
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  1350                           ;write_data@data stored from wreg
  1351  04F6  00F2               	movwf	write_data@data
  1352  04F7                     l1346:
  1353                           
  1354                           ;LcdDriver.c: 27:     RA2 = 1;
  1355  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1356  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1357  04F9  1505               	bsf	5,2	;volatile
  1358                           
  1359                           ;LcdDriver.c: 28:     RA3 = 0;
  1360  04FA  1185               	bcf	5,3	;volatile
  1361                           
  1362                           ;LcdDriver.c: 29:     RA5 = 0;
  1363  04FB  1285               	bcf	5,5	;volatile
  1364  04FC                     l1348:
  1365                           
  1366                           ;LcdDriver.c: 31:     delay();
  1367  04FC  120A  118A  24A4  120A  118A  	fcall	_delay
  1368  0501                     l1350:
  1369                           
  1370                           ;LcdDriver.c: 33:     RA5 = 1;
  1371  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0503  1685               	bsf	5,5	;volatile
  1374  0504                     l1352:
  1375                           
  1376                           ;LcdDriver.c: 35:     PORTD = data;
  1377  0504  0872               	movf	write_data@data,w
  1378  0505  0088               	movwf	8	;volatile
  1379  0506                     l1354:
  1380                           
  1381                           ;LcdDriver.c: 37:     delay();
  1382  0506  120A  118A  24A4  120A  118A  	fcall	_delay
  1383  050B                     l1356:
  1384                           
  1385                           ;LcdDriver.c: 39:     RA5 = 0;
  1386  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1387  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1388  050D  1285               	bcf	5,5	;volatile
  1389  050E                     l93:
  1390  050E  0008               	return
  1391  050F                     __end_of_write_data:
  1392                           
  1393                           	psect	text5
  1394  0654                     __ptext5:	
  1395 ;; *************** function _move_cursor *****************
  1396 ;; Defined at:
  1397 ;;		line 72 in file "LcdDriver.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  position        2    9[COMMON] int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  i               2    2[BANK0 ] int 
  1402 ;;  i               2    0[BANK0 ] int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         2       0       0       0       0
  1413 ;;      Locals:         0       4       0       0       0
  1414 ;;      Temps:          1       0       0       0       0
  1415 ;;      Totals:         3       4       0       0       0
  1416 ;;Total ram usage:        7 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 2
  1419 ;; This function calls:
  1420 ;;		_delay_xy
  1421 ;;		_write_cmd
  1422 ;; This function is called by:
  1423 ;;		_write_string_at_pos
  1424 ;;		_write_char_at_pos
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _move_cursor
  1430  0654                     _move_cursor:
  1431  0654                     l1358:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _move_cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;LcdDriver.c: 72: void move_cursor(int position);LcdDriver.c: 73: {;LcdDriver.c: 74:    
      +                           write_cmd(0x02);
  1437  0654  3002               	movlw	2
  1438  0655  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  1439                           
  1440                           ;LcdDriver.c: 75:     delay_xy(50,50);
  1441  065A  3032               	movlw	50
  1442  065B  00F0               	movwf	delay_xy@x
  1443  065C  3000               	movlw	0
  1444  065D  00F1               	movwf	delay_xy@x+1
  1445  065E  3032               	movlw	50
  1446  065F  00F2               	movwf	delay_xy@y
  1447  0660  3000               	movlw	0
  1448  0661  00F3               	movwf	delay_xy@y+1
  1449  0662  120A  118A  2549  120A  118A  	fcall	_delay_xy
  1450  0667                     l1360:
  1451                           
  1452                           ;LcdDriver.c: 76:     if(position>=0 && position<=15)
  1453  0667  1BFA               	btfsc	move_cursor@position+1,7
  1454  0668  2E6A               	goto	u381
  1455  0669  2E6B               	goto	u380
  1456  066A                     u381:
  1457  066A  2EA7               	goto	l1372
  1458  066B                     u380:
  1459  066B                     l1362:
  1460  066B  087A               	movf	move_cursor@position+1,w
  1461  066C  3A80               	xorlw	128
  1462  066D  00FF               	movwf	btemp+1
  1463  066E  3080               	movlw	128
  1464  066F  027F               	subwf	btemp+1,w
  1465  0670  1D03               	skipz
  1466  0671  2E74               	goto	u395
  1467  0672  3010               	movlw	16
  1468  0673  0279               	subwf	move_cursor@position,w
  1469  0674                     u395:
  1470  0674  1803               	skipnc
  1471  0675  2E77               	goto	u391
  1472  0676  2E78               	goto	u390
  1473  0677                     u391:
  1474  0677  2EA7               	goto	l1372
  1475  0678                     u390:
  1476  0678                     l1364:
  1477                           
  1478                           ;LcdDriver.c: 77:     {;LcdDriver.c: 79:         for(int i=0; i<position; i++)
  1479  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1481  067A  01A0               	clrf	move_cursor@i
  1482  067B  01A1               	clrf	move_cursor@i+1
  1483  067C  2E98               	goto	l1370
  1484  067D                     l1366:
  1485                           
  1486                           ;LcdDriver.c: 80:         {;LcdDriver.c: 81:             write_cmd(0x14);
  1487  067D  3014               	movlw	20
  1488  067E  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  1489                           
  1490                           ;LcdDriver.c: 82:             delay_xy(50,50);
  1491  0683  3032               	movlw	50
  1492  0684  00F0               	movwf	delay_xy@x
  1493  0685  3000               	movlw	0
  1494  0686  00F1               	movwf	delay_xy@x+1
  1495  0687  3032               	movlw	50
  1496  0688  00F2               	movwf	delay_xy@y
  1497  0689  3000               	movlw	0
  1498  068A  00F3               	movwf	delay_xy@y+1
  1499  068B  120A  118A  2549  120A  118A  	fcall	_delay_xy
  1500  0690                     l1368:
  1501                           
  1502                           ;LcdDriver.c: 83:         }
  1503  0690  3001               	movlw	1
  1504  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0693  07A0               	addwf	move_cursor@i,f
  1507  0694  1803               	skipnc
  1508  0695  0AA1               	incf	move_cursor@i+1,f
  1509  0696  3000               	movlw	0
  1510  0697  07A1               	addwf	move_cursor@i+1,f
  1511  0698                     l1370:
  1512  0698  0821               	movf	move_cursor@i+1,w
  1513  0699  3A80               	xorlw	128
  1514  069A  00FB               	movwf	??_move_cursor
  1515  069B  087A               	movf	move_cursor@position+1,w
  1516  069C  3A80               	xorlw	128
  1517  069D  027B               	subwf	??_move_cursor,w
  1518  069E  1D03               	skipz
  1519  069F  2EA2               	goto	u405
  1520  06A0  0879               	movf	move_cursor@position,w
  1521  06A1  0220               	subwf	move_cursor@i,w
  1522  06A2                     u405:
  1523  06A2  1C03               	skipc
  1524  06A3  2EA5               	goto	u401
  1525  06A4  2EA6               	goto	u400
  1526  06A5                     u401:
  1527  06A5  2E7D               	goto	l1366
  1528  06A6                     u400:
  1529  06A6  2F04               	goto	l120
  1530  06A7                     l1372:
  1531  06A7  087A               	movf	move_cursor@position+1,w
  1532  06A8  3A80               	xorlw	128
  1533  06A9  00FF               	movwf	btemp+1
  1534  06AA  3080               	movlw	128
  1535  06AB  027F               	subwf	btemp+1,w
  1536  06AC  1D03               	skipz
  1537  06AD  2EB0               	goto	u415
  1538  06AE  3010               	movlw	16
  1539  06AF  0279               	subwf	move_cursor@position,w
  1540  06B0                     u415:
  1541  06B0  1C03               	skipc
  1542  06B1  2EB3               	goto	u411
  1543  06B2  2EB4               	goto	u410
  1544  06B3                     u411:
  1545  06B3  2F04               	goto	l120
  1546  06B4                     u410:
  1547  06B4                     l1374:
  1548  06B4  087A               	movf	move_cursor@position+1,w
  1549  06B5  3A80               	xorlw	128
  1550  06B6  00FF               	movwf	btemp+1
  1551  06B7  3080               	movlw	128
  1552  06B8  027F               	subwf	btemp+1,w
  1553  06B9  1D03               	skipz
  1554  06BA  2EBD               	goto	u425
  1555  06BB  3020               	movlw	32
  1556  06BC  0279               	subwf	move_cursor@position,w
  1557  06BD                     u425:
  1558  06BD  1803               	skipnc
  1559  06BE  2EC0               	goto	u421
  1560  06BF  2EC1               	goto	u420
  1561  06C0                     u421:
  1562  06C0  2F04               	goto	l120
  1563  06C1                     u420:
  1564  06C1                     l1376:
  1565                           
  1566                           ;LcdDriver.c: 87:         write_cmd(0x0C0);
  1567  06C1  30C0               	movlw	192
  1568  06C2  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  1569                           
  1570                           ;LcdDriver.c: 88:         delay_xy(50,50);
  1571  06C7  3032               	movlw	50
  1572  06C8  00F0               	movwf	delay_xy@x
  1573  06C9  3000               	movlw	0
  1574  06CA  00F1               	movwf	delay_xy@x+1
  1575  06CB  3032               	movlw	50
  1576  06CC  00F2               	movwf	delay_xy@y
  1577  06CD  3000               	movlw	0
  1578  06CE  00F3               	movwf	delay_xy@y+1
  1579  06CF  120A  118A  2549  120A  118A  	fcall	_delay_xy
  1580  06D4                     l1378:
  1581                           
  1582                           ;LcdDriver.c: 89:         for(int i=16; i<position; i++)
  1583  06D4  3010               	movlw	16
  1584  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1585  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1586  06D7  00A2               	movwf	move_cursor@i_124
  1587  06D8  3000               	movlw	0
  1588  06D9  00A3               	movwf	move_cursor@i_124+1
  1589  06DA  2EF6               	goto	l1384
  1590  06DB                     l1380:
  1591                           
  1592                           ;LcdDriver.c: 90:         {;LcdDriver.c: 91:             write_cmd(0x14);
  1593  06DB  3014               	movlw	20
  1594  06DC  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  1595                           
  1596                           ;LcdDriver.c: 92:             delay_xy(50,50);
  1597  06E1  3032               	movlw	50
  1598  06E2  00F0               	movwf	delay_xy@x
  1599  06E3  3000               	movlw	0
  1600  06E4  00F1               	movwf	delay_xy@x+1
  1601  06E5  3032               	movlw	50
  1602  06E6  00F2               	movwf	delay_xy@y
  1603  06E7  3000               	movlw	0
  1604  06E8  00F3               	movwf	delay_xy@y+1
  1605  06E9  120A  118A  2549  120A  118A  	fcall	_delay_xy
  1606  06EE                     l1382:
  1607                           
  1608                           ;LcdDriver.c: 93:         }
  1609  06EE  3001               	movlw	1
  1610  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1611  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1612  06F1  07A2               	addwf	move_cursor@i_124,f
  1613  06F2  1803               	skipnc
  1614  06F3  0AA3               	incf	move_cursor@i_124+1,f
  1615  06F4  3000               	movlw	0
  1616  06F5  07A3               	addwf	move_cursor@i_124+1,f
  1617  06F6                     l1384:
  1618  06F6  0823               	movf	move_cursor@i_124+1,w
  1619  06F7  3A80               	xorlw	128
  1620  06F8  00FB               	movwf	??_move_cursor
  1621  06F9  087A               	movf	move_cursor@position+1,w
  1622  06FA  3A80               	xorlw	128
  1623  06FB  027B               	subwf	??_move_cursor,w
  1624  06FC  1D03               	skipz
  1625  06FD  2F00               	goto	u435
  1626  06FE  0879               	movf	move_cursor@position,w
  1627  06FF  0222               	subwf	move_cursor@i_124,w
  1628  0700                     u435:
  1629  0700  1C03               	skipc
  1630  0701  2F03               	goto	u431
  1631  0702  2F04               	goto	u430
  1632  0703                     u431:
  1633  0703  2EDB               	goto	l1380
  1634  0704                     u430:
  1635  0704                     l120:
  1636  0704  0008               	return
  1637  0705                     __end_of_move_cursor:
  1638                           
  1639                           	psect	text6
  1640  0705                     __ptext6:	
  1641 ;; *************** function _read_keys *****************
  1642 ;; Defined at:
  1643 ;;		line 11 in file "KeyboardDriver.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  keypad         16    0[BANK0 ] unsigned char [16]
  1648 ;;  swIndexes       8   18[BANK0 ] int [4]
  1649 ;;  i               2   16[BANK0 ] int 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      unsigned char 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0      26       0       0       0
  1661 ;;      Temps:          4       0       0       0       0
  1662 ;;      Totals:         4      26       0       0       0
  1663 ;;Total ram usage:       30 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _read_keys
  1674  0705                     _read_keys:
  1675  0705                     l1418:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _read_keys: [wreg-fsr0h+status,2+status,0+btemp+1]
  1678                           
  1679                           
  1680                           ;KeyboardDriver.c: 13:     for(int i = 0; i < 4; ++i){
  1681  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0707  01B0               	clrf	read_keys@i
  1684  0708  01B1               	clrf	read_keys@i+1
  1685  0709                     l1424:
  1686                           
  1687                           ;KeyboardDriver.c: 14:         char keypad[16] = {'7', '8', '9', 'U',
  1688  0709  3020               	movlw	read_keys@keypad& (0+255)
  1689  070A  0084               	movwf	4
  1690  070B  30A0               	movlw	low read_keys@F883
  1691  070C  00F0               	movwf	??_read_keys
  1692  070D  0804               	movf	4,w
  1693  070E  00F1               	movwf	??_read_keys+1
  1694  070F  3010               	movlw	16
  1695  0710  00F2               	movwf	??_read_keys+2
  1696  0711                     u460:
  1697  0711  0870               	movf	??_read_keys,w
  1698  0712  0084               	movwf	4
  1699  0713  1383               	bcf	3,7	;select IRP bank1
  1700  0714  0800               	movf	0,w
  1701  0715  00F3               	movwf	??_read_keys+3
  1702  0716  0AF0               	incf	??_read_keys,f
  1703  0717  0871               	movf	??_read_keys+1,w
  1704  0718  0084               	movwf	4
  1705  0719  0873               	movf	??_read_keys+3,w
  1706  071A  0080               	movwf	0
  1707  071B  0AF1               	incf	??_read_keys+1,f
  1708  071C  0BF2               	decfsz	??_read_keys+2,f
  1709  071D  2F11               	goto	u460
  1710                           
  1711                           ;KeyboardDriver.c: 18:         int swIndexes[4] = {0, 1, 2, 3};
  1712  071E  3032               	movlw	read_keys@swIndexes& (0+255)
  1713  071F  0084               	movwf	4
  1714  0720  303E               	movlw	low read_keys@F885
  1715  0721  00F0               	movwf	??_read_keys
  1716  0722  0804               	movf	4,w
  1717  0723  00F1               	movwf	??_read_keys+1
  1718  0724  3008               	movlw	8
  1719  0725  00F2               	movwf	??_read_keys+2
  1720  0726                     u470:
  1721  0726  0870               	movf	??_read_keys,w
  1722  0727  0084               	movwf	4
  1723  0728  1383               	bcf	3,7	;select IRP bank0
  1724  0729  0800               	movf	0,w
  1725  072A  00F3               	movwf	??_read_keys+3
  1726  072B  0AF0               	incf	??_read_keys,f
  1727  072C  0871               	movf	??_read_keys+1,w
  1728  072D  0084               	movwf	4
  1729  072E  0873               	movf	??_read_keys+3,w
  1730  072F  0080               	movwf	0
  1731  0730  0AF1               	incf	??_read_keys+1,f
  1732  0731  0BF2               	decfsz	??_read_keys+2,f
  1733  0732  2F26               	goto	u470
  1734                           
  1735                           ;KeyboardDriver.c: 19:         switch(i){
  1736  0733  2F86               	goto	l1442
  1737  0734                     l270:	
  1738                           ;KeyboardDriver.c: 20:             case 0:
  1739                           
  1740                           
  1741                           ;KeyboardDriver.c: 21:                 RA1 = 1;
  1742  0734  1485               	bsf	5,1	;volatile
  1743                           
  1744                           ;KeyboardDriver.c: 22:                 RC7 = 0;
  1745  0735  1387               	bcf	7,7	;volatile
  1746                           
  1747                           ;KeyboardDriver.c: 23:                 RC6 = 0;
  1748  0736  1307               	bcf	7,6	;volatile
  1749                           
  1750                           ;KeyboardDriver.c: 24:                 RC5 = 0;
  1751  0737  1287               	bcf	7,5	;volatile
  1752  0738                     l1426:
  1753                           
  1754                           ;KeyboardDriver.c: 25:                 swIndexes[0] = 0;
  1755  0738  01B2               	clrf	read_keys@swIndexes
  1756  0739  01B3               	clrf	read_keys@swIndexes+1
  1757  073A                     l1428:
  1758                           
  1759                           ;KeyboardDriver.c: 26:                 swIndexes[1] = 1;
  1760  073A  3001               	movlw	1
  1761  073B  00B4               	movwf	read_keys@swIndexes+2
  1762  073C  3000               	movlw	0
  1763  073D  00B5               	movwf	read_keys@swIndexes+3
  1764  073E                     l1430:
  1765                           
  1766                           ;KeyboardDriver.c: 27:                 swIndexes[2] = 2;
  1767  073E  3002               	movlw	2
  1768  073F  00B6               	movwf	read_keys@swIndexes+4
  1769  0740  3000               	movlw	0
  1770  0741  00B7               	movwf	read_keys@swIndexes+5
  1771  0742                     l1432:
  1772                           
  1773                           ;KeyboardDriver.c: 28:                 swIndexes[3] = 3;
  1774  0742  3003               	movlw	3
  1775  0743  00B8               	movwf	read_keys@swIndexes+6
  1776  0744  3000               	movlw	0
  1777  0745  00B9               	movwf	read_keys@swIndexes+7
  1778                           
  1779                           ;KeyboardDriver.c: 29:                 break;
  1780  0746  2F9B               	goto	l271
  1781  0747                     l272:	
  1782                           ;KeyboardDriver.c: 30:             case 1:
  1783                           
  1784                           
  1785                           ;KeyboardDriver.c: 31:                 RA1 = 0;
  1786  0747  1085               	bcf	5,1	;volatile
  1787                           
  1788                           ;KeyboardDriver.c: 32:                 RC7 = 1;
  1789  0748  1787               	bsf	7,7	;volatile
  1790                           
  1791                           ;KeyboardDriver.c: 33:                 RC6 = 0;
  1792  0749  1307               	bcf	7,6	;volatile
  1793                           
  1794                           ;KeyboardDriver.c: 34:                 RC5 = 0;
  1795  074A  1287               	bcf	7,5	;volatile
  1796  074B                     l1434:
  1797                           
  1798                           ;KeyboardDriver.c: 35:                 swIndexes[0] = 4;
  1799  074B  3004               	movlw	4
  1800  074C  00B2               	movwf	read_keys@swIndexes
  1801  074D  3000               	movlw	0
  1802  074E  00B3               	movwf	read_keys@swIndexes+1
  1803                           
  1804                           ;KeyboardDriver.c: 36:                 swIndexes[1] = 5;
  1805  074F  3005               	movlw	5
  1806  0750  00B4               	movwf	read_keys@swIndexes+2
  1807  0751  3000               	movlw	0
  1808  0752  00B5               	movwf	read_keys@swIndexes+3
  1809                           
  1810                           ;KeyboardDriver.c: 37:                 swIndexes[2] = 6;
  1811  0753  3006               	movlw	6
  1812  0754  00B6               	movwf	read_keys@swIndexes+4
  1813  0755  3000               	movlw	0
  1814  0756  00B7               	movwf	read_keys@swIndexes+5
  1815                           
  1816                           ;KeyboardDriver.c: 38:                 swIndexes[3] = 7;
  1817  0757  3007               	movlw	7
  1818  0758  00B8               	movwf	read_keys@swIndexes+6
  1819  0759  3000               	movlw	0
  1820  075A  00B9               	movwf	read_keys@swIndexes+7
  1821                           
  1822                           ;KeyboardDriver.c: 39:                 break;
  1823  075B  2F9B               	goto	l271
  1824  075C                     l273:	
  1825                           ;KeyboardDriver.c: 40:             case 2:
  1826                           
  1827                           
  1828                           ;KeyboardDriver.c: 41:                 RA1 = 0;
  1829  075C  1085               	bcf	5,1	;volatile
  1830                           
  1831                           ;KeyboardDriver.c: 42:                 RC7 = 0;
  1832  075D  1387               	bcf	7,7	;volatile
  1833                           
  1834                           ;KeyboardDriver.c: 43:                 RC6 = 1;
  1835  075E  1707               	bsf	7,6	;volatile
  1836                           
  1837                           ;KeyboardDriver.c: 44:                 RC5 = 0;
  1838  075F  1287               	bcf	7,5	;volatile
  1839  0760                     l1436:
  1840                           
  1841                           ;KeyboardDriver.c: 45:                 swIndexes[0] = 8;
  1842  0760  3008               	movlw	8
  1843  0761  00B2               	movwf	read_keys@swIndexes
  1844  0762  3000               	movlw	0
  1845  0763  00B3               	movwf	read_keys@swIndexes+1
  1846                           
  1847                           ;KeyboardDriver.c: 46:                 swIndexes[1] = 9;
  1848  0764  3009               	movlw	9
  1849  0765  00B4               	movwf	read_keys@swIndexes+2
  1850  0766  3000               	movlw	0
  1851  0767  00B5               	movwf	read_keys@swIndexes+3
  1852                           
  1853                           ;KeyboardDriver.c: 47:                 swIndexes[2] = 10;
  1854  0768  300A               	movlw	10
  1855  0769  00B6               	movwf	read_keys@swIndexes+4
  1856  076A  3000               	movlw	0
  1857  076B  00B7               	movwf	read_keys@swIndexes+5
  1858                           
  1859                           ;KeyboardDriver.c: 48:                 swIndexes[3] = 11;
  1860  076C  300B               	movlw	11
  1861  076D  00B8               	movwf	read_keys@swIndexes+6
  1862  076E  3000               	movlw	0
  1863  076F  00B9               	movwf	read_keys@swIndexes+7
  1864                           
  1865                           ;KeyboardDriver.c: 49:                 break;
  1866  0770  2F9B               	goto	l271
  1867  0771                     l274:	
  1868                           ;KeyboardDriver.c: 50:             case 3:
  1869                           
  1870                           
  1871                           ;KeyboardDriver.c: 51:                 RA1 = 0;
  1872  0771  1085               	bcf	5,1	;volatile
  1873                           
  1874                           ;KeyboardDriver.c: 52:                 RC7 = 0;
  1875  0772  1387               	bcf	7,7	;volatile
  1876                           
  1877                           ;KeyboardDriver.c: 53:                 RC6 = 0;
  1878  0773  1307               	bcf	7,6	;volatile
  1879                           
  1880                           ;KeyboardDriver.c: 54:                 RC5 = 1;
  1881  0774  1687               	bsf	7,5	;volatile
  1882  0775                     l1438:
  1883                           
  1884                           ;KeyboardDriver.c: 55:                 swIndexes[0] = 12;
  1885  0775  300C               	movlw	12
  1886  0776  00B2               	movwf	read_keys@swIndexes
  1887  0777  3000               	movlw	0
  1888  0778  00B3               	movwf	read_keys@swIndexes+1
  1889                           
  1890                           ;KeyboardDriver.c: 56:                 swIndexes[1] = 13;
  1891  0779  300D               	movlw	13
  1892  077A  00B4               	movwf	read_keys@swIndexes+2
  1893  077B  3000               	movlw	0
  1894  077C  00B5               	movwf	read_keys@swIndexes+3
  1895                           
  1896                           ;KeyboardDriver.c: 57:                 swIndexes[2] = 14;
  1897  077D  300E               	movlw	14
  1898  077E  00B6               	movwf	read_keys@swIndexes+4
  1899  077F  3000               	movlw	0
  1900  0780  00B7               	movwf	read_keys@swIndexes+5
  1901                           
  1902                           ;KeyboardDriver.c: 58:                 swIndexes[3] = 15;
  1903  0781  300F               	movlw	15
  1904  0782  00B8               	movwf	read_keys@swIndexes+6
  1905  0783  3000               	movlw	0
  1906  0784  00B9               	movwf	read_keys@swIndexes+7
  1907                           
  1908                           ;KeyboardDriver.c: 59:                 break;
  1909  0785  2F9B               	goto	l271
  1910  0786                     l1442:
  1911                           
  1912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 1, Range of values is 0 to 0
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            4     3 (average)
  1918                           ; direct_byte           11     8 (fixed)
  1919                           ; jumptable            260     6 (fixed)
  1920                           ;	Chosen strategy is simple_byte
  1921  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0788  0831               	movf	read_keys@i+1,w
  1924  0789  3A00               	xorlw	0	; case 0
  1925  078A  1903               	skipnz
  1926  078B  2F8D               	goto	l1698
  1927  078C  2F9B               	goto	l271
  1928  078D                     l1698:
  1929                           
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 4, Range of values is 0 to 3
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte           13     7 (average)
  1935                           ; direct_byte           20     8 (fixed)
  1936                           ; jumptable            260     6 (fixed)
  1937                           ;	Chosen strategy is simple_byte
  1938  078D  0830               	movf	read_keys@i,w
  1939  078E  3A00               	xorlw	0	; case 0
  1940  078F  1903               	skipnz
  1941  0790  2F34               	goto	l270
  1942  0791  3A01               	xorlw	1	; case 1
  1943  0792  1903               	skipnz
  1944  0793  2F47               	goto	l272
  1945  0794  3A03               	xorlw	3	; case 2
  1946  0795  1903               	skipnz
  1947  0796  2F5C               	goto	l273
  1948  0797  3A01               	xorlw	1	; case 3
  1949  0798  1903               	skipnz
  1950  0799  2F71               	goto	l274
  1951  079A  2F9B               	goto	l271
  1952  079B                     l271:
  1953                           
  1954                           ;KeyboardDriver.c: 63:         if (RB0 == 0)
  1955  079B  1806               	btfsc	6,0	;volatile
  1956  079C  2F9E               	goto	u481
  1957  079D  2F9F               	goto	u480
  1958  079E                     u481:
  1959  079E  2FA4               	goto	l276
  1960  079F                     u480:
  1961  079F                     l1444:
  1962                           
  1963                           ;KeyboardDriver.c: 64:         {;KeyboardDriver.c: 65:             return keypad[swIndex
      +                          es[0]];
  1964  079F  0832               	movf	read_keys@swIndexes,w
  1965  07A0  3E20               	addlw	(low (read_keys@keypad| 0))& (0+255)
  1966  07A1  0084               	movwf	4
  1967  07A2  0800               	movf	0,w
  1968  07A3  2FD3               	goto	l277
  1969  07A4                     l276:	
  1970                           ;KeyboardDriver.c: 66:         }
  1971                           
  1972                           
  1973                           ;KeyboardDriver.c: 67:         if (RB2 == 0)
  1974  07A4  1906               	btfsc	6,2	;volatile
  1975  07A5  2FA7               	goto	u491
  1976  07A6  2FA8               	goto	u490
  1977  07A7                     u491:
  1978  07A7  2FAD               	goto	l278
  1979  07A8                     u490:
  1980  07A8                     l1448:
  1981                           
  1982                           ;KeyboardDriver.c: 68:         {;KeyboardDriver.c: 69:             return keypad[swIndex
      +                          es[1]];
  1983  07A8  0834               	movf	read_keys@swIndexes+2,w
  1984  07A9  3E20               	addlw	(low (read_keys@keypad| 0))& (0+255)
  1985  07AA  0084               	movwf	4
  1986  07AB  0800               	movf	0,w
  1987  07AC  2FD3               	goto	l277
  1988  07AD                     l278:	
  1989                           ;KeyboardDriver.c: 70:         }
  1990                           
  1991                           
  1992                           ;KeyboardDriver.c: 71:         if (RB4 == 0)
  1993  07AD  1A06               	btfsc	6,4	;volatile
  1994  07AE  2FB0               	goto	u501
  1995  07AF  2FB1               	goto	u500
  1996  07B0                     u501:
  1997  07B0  2FB6               	goto	l279
  1998  07B1                     u500:
  1999  07B1                     l1452:
  2000                           
  2001                           ;KeyboardDriver.c: 72:         {;KeyboardDriver.c: 73:             return keypad[swIndex
      +                          es[2]];
  2002  07B1  0836               	movf	read_keys@swIndexes+4,w
  2003  07B2  3E20               	addlw	(low (read_keys@keypad| 0))& (0+255)
  2004  07B3  0084               	movwf	4
  2005  07B4  0800               	movf	0,w
  2006  07B5  2FD3               	goto	l277
  2007  07B6                     l279:	
  2008                           ;KeyboardDriver.c: 74:         }
  2009                           
  2010                           
  2011                           ;KeyboardDriver.c: 75:         if (RB5 == 0)
  2012  07B6  1A86               	btfsc	6,5	;volatile
  2013  07B7  2FB9               	goto	u511
  2014  07B8  2FBA               	goto	u510
  2015  07B9                     u511:
  2016  07B9  2FBF               	goto	l1460
  2017  07BA                     u510:
  2018  07BA                     l1456:
  2019                           
  2020                           ;KeyboardDriver.c: 76:         {;KeyboardDriver.c: 77:             return keypad[swIndex
      +                          es[3]];
  2021  07BA  0838               	movf	read_keys@swIndexes+6,w
  2022  07BB  3E20               	addlw	(low (read_keys@keypad| 0))& (0+255)
  2023  07BC  0084               	movwf	4
  2024  07BD  0800               	movf	0,w
  2025  07BE  2FD3               	goto	l277
  2026  07BF                     l1460:
  2027                           
  2028                           ;KeyboardDriver.c: 79:     }
  2029  07BF  3001               	movlw	1
  2030  07C0  07B0               	addwf	read_keys@i,f
  2031  07C1  1803               	skipnc
  2032  07C2  0AB1               	incf	read_keys@i+1,f
  2033  07C3  3000               	movlw	0
  2034  07C4  07B1               	addwf	read_keys@i+1,f
  2035  07C5                     l1462:
  2036  07C5  0831               	movf	read_keys@i+1,w
  2037  07C6  3A80               	xorlw	128
  2038  07C7  00FF               	movwf	btemp+1
  2039  07C8  3080               	movlw	128
  2040  07C9  027F               	subwf	btemp+1,w
  2041  07CA  1D03               	skipz
  2042  07CB  2FCE               	goto	u525
  2043  07CC  3004               	movlw	4
  2044  07CD  0230               	subwf	read_keys@i,w
  2045  07CE                     u525:
  2046  07CE  1C03               	skipc
  2047  07CF  2FD1               	goto	u521
  2048  07D0  2FD2               	goto	u520
  2049  07D1                     u521:
  2050  07D1  2F09               	goto	l1424
  2051  07D2                     u520:
  2052  07D2                     l1464:
  2053                           
  2054                           ;KeyboardDriver.c: 80:     return '#';
  2055  07D2  3023               	movlw	35
  2056  07D3                     l277:
  2057  07D3  0008               	return
  2058  07D4                     __end_of_read_keys:
  2059                           
  2060                           	psect	text7
  2061  048C                     __ptext7:	
  2062 ;; *************** function _init_keyboard *****************
  2063 ;; Defined at:
  2064 ;;		line 3 in file "KeyboardDriver.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _init_keyboard
  2093  048C                     _init_keyboard:
  2094  048C                     l1410:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _init_keyboard: [wreg+status,2]
  2097                           
  2098                           
  2099                           ;KeyboardDriver.c: 5:     ADCON1 = 0x07;
  2100  048C  3007               	movlw	7
  2101  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2102  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2103  048F  009F               	movwf	31	;volatile
  2104  0490                     l1412:
  2105                           
  2106                           ;KeyboardDriver.c: 6:     TRISA = 0x00;
  2107  0490  0185               	clrf	5	;volatile
  2108  0491                     l1414:
  2109                           
  2110                           ;KeyboardDriver.c: 7:     TRISD = 0x00;
  2111  0491  0188               	clrf	8	;volatile
  2112  0492                     l1416:
  2113                           
  2114                           ;KeyboardDriver.c: 8:     TRISC = 0x00;
  2115  0492  0187               	clrf	7	;volatile
  2116  0493                     l260:
  2117  0493  0008               	return
  2118  0494                     __end_of_init_keyboard:
  2119                           
  2120                           	psect	text8
  2121  05AF                     __ptext8:	
  2122 ;; *************** function _init_display *****************
  2123 ;; Defined at:
  2124 ;;		line 62 in file "LcdDriver.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 2
  2145 ;; This function calls:
  2146 ;;		_delay_xy
  2147 ;;		_write_cmd
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _init_display
  2155  05AF                     _init_display:
  2156  05AF                     l1396:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _init_display: [wreg+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;LcdDriver.c: 64:     write_cmd(0x01);
  2162  05AF  3001               	movlw	1
  2163  05B0  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  2164                           
  2165                           ;LcdDriver.c: 65:     delay_xy(50,50);
  2166  05B5  3032               	movlw	50
  2167  05B6  00F0               	movwf	delay_xy@x
  2168  05B7  3000               	movlw	0
  2169  05B8  00F1               	movwf	delay_xy@x+1
  2170  05B9  3032               	movlw	50
  2171  05BA  00F2               	movwf	delay_xy@y
  2172  05BB  3000               	movlw	0
  2173  05BC  00F3               	movwf	delay_xy@y+1
  2174  05BD  120A  118A  2549  120A  118A  	fcall	_delay_xy
  2175                           
  2176                           ;LcdDriver.c: 66:     write_cmd(0x38);
  2177  05C2  3038               	movlw	56
  2178  05C3  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  2179                           
  2180                           ;LcdDriver.c: 67:     delay_xy(50,50);
  2181  05C8  3032               	movlw	50
  2182  05C9  00F0               	movwf	delay_xy@x
  2183  05CA  3000               	movlw	0
  2184  05CB  00F1               	movwf	delay_xy@x+1
  2185  05CC  3032               	movlw	50
  2186  05CD  00F2               	movwf	delay_xy@y
  2187  05CE  3000               	movlw	0
  2188  05CF  00F3               	movwf	delay_xy@y+1
  2189  05D0  120A  118A  2549  120A  118A  	fcall	_delay_xy
  2190                           
  2191                           ;LcdDriver.c: 68:     write_cmd(0x0e);
  2192  05D5  300E               	movlw	14
  2193  05D6  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  2194                           
  2195                           ;LcdDriver.c: 69:     delay_xy(50,50);
  2196  05DB  3032               	movlw	50
  2197  05DC  00F0               	movwf	delay_xy@x
  2198  05DD  3000               	movlw	0
  2199  05DE  00F1               	movwf	delay_xy@x+1
  2200  05DF  3032               	movlw	50
  2201  05E0  00F2               	movwf	delay_xy@y
  2202  05E1  3000               	movlw	0
  2203  05E2  00F3               	movwf	delay_xy@y+1
  2204  05E3  120A  118A  2549  120A  118A  	fcall	_delay_xy
  2205  05E8                     l108:
  2206  05E8  0008               	return
  2207  05E9                     __end_of_init_display:
  2208                           
  2209                           	psect	text9
  2210  0549                     __ptext9:	
  2211 ;; *************** function _delay_xy *****************
  2212 ;; Defined at:
  2213 ;;		line 8 in file "Delay.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  x               2    0[COMMON] int 
  2216 ;;  y               2    2[COMMON] int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  j               2    7[COMMON] int 
  2219 ;;  i               2    5[COMMON] int 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         4       0       0       0       0
  2230 ;;      Locals:         4       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         9       0       0       0       0
  2233 ;;Total ram usage:        9 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;;		_init_display
  2240 ;;		_move_cursor
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _delay_xy
  2246  0549                     _delay_xy:
  2247  0549                     l1328:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _delay_xy: [wreg+status,2]
  2250                           
  2251                           
  2252                           ;Delay.c: 8: void delay_xy (int x, int y);Delay.c: 9: {;Delay.c: 10:     int i,j;;Delay.
      +                          c: 11:     for(i=0;i<x;i++)
  2253  0549  01F5               	clrf	delay_xy@i
  2254  054A  01F6               	clrf	delay_xy@i+1
  2255  054B  2D6A               	goto	l302
  2256  054C                     l1330:
  2257                           
  2258                           ;Delay.c: 12:         for(j=0;j<y;j++)__nop();
  2259  054C  01F7               	clrf	delay_xy@j
  2260  054D  01F8               	clrf	delay_xy@j+1
  2261  054E  2D56               	goto	l304
  2262  054F                     l305:
  2263  054F  0000               	nop
  2264  0550                     l1332:
  2265  0550  3001               	movlw	1
  2266  0551  07F7               	addwf	delay_xy@j,f
  2267  0552  1803               	skipnc
  2268  0553  0AF8               	incf	delay_xy@j+1,f
  2269  0554  3000               	movlw	0
  2270  0555  07F8               	addwf	delay_xy@j+1,f
  2271  0556                     l304:
  2272  0556  0878               	movf	delay_xy@j+1,w
  2273  0557  3A80               	xorlw	128
  2274  0558  00F4               	movwf	??_delay_xy
  2275  0559  0873               	movf	delay_xy@y+1,w
  2276  055A  3A80               	xorlw	128
  2277  055B  0274               	subwf	??_delay_xy,w
  2278  055C  1D03               	skipz
  2279  055D  2D60               	goto	u365
  2280  055E  0872               	movf	delay_xy@y,w
  2281  055F  0277               	subwf	delay_xy@j,w
  2282  0560                     u365:
  2283  0560  1C03               	skipc
  2284  0561  2D63               	goto	u361
  2285  0562  2D64               	goto	u360
  2286  0563                     u361:
  2287  0563  2D4F               	goto	l305
  2288  0564                     u360:
  2289  0564                     l1334:
  2290  0564  3001               	movlw	1
  2291  0565  07F5               	addwf	delay_xy@i,f
  2292  0566  1803               	skipnc
  2293  0567  0AF6               	incf	delay_xy@i+1,f
  2294  0568  3000               	movlw	0
  2295  0569  07F6               	addwf	delay_xy@i+1,f
  2296  056A                     l302:
  2297  056A  0876               	movf	delay_xy@i+1,w
  2298  056B  3A80               	xorlw	128
  2299  056C  00F4               	movwf	??_delay_xy
  2300  056D  0871               	movf	delay_xy@x+1,w
  2301  056E  3A80               	xorlw	128
  2302  056F  0274               	subwf	??_delay_xy,w
  2303  0570  1D03               	skipz
  2304  0571  2D74               	goto	u375
  2305  0572  0870               	movf	delay_xy@x,w
  2306  0573  0275               	subwf	delay_xy@i,w
  2307  0574                     u375:
  2308  0574  1C03               	skipc
  2309  0575  2D77               	goto	u371
  2310  0576  2D78               	goto	u370
  2311  0577                     u371:
  2312  0577  2D4C               	goto	l1330
  2313  0578                     u370:
  2314  0578                     l308:
  2315  0578  0008               	return
  2316  0579                     __end_of_delay_xy:
  2317                           
  2318                           	psect	text10
  2319  0485                     __ptext10:	
  2320 ;; *************** function _clear_display *****************
  2321 ;; Defined at:
  2322 ;;		line 42 in file "LcdDriver.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		_write_cmd
  2345 ;; This function is called by:
  2346 ;;		_main
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _clear_display
  2352  0485                     _clear_display:
  2353  0485                     l1398:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _clear_display: [wreg+status,2+status,0+pclath+cstack]
  2356                           
  2357                           
  2358                           ;LcdDriver.c: 44:     write_cmd(0x01);
  2359  0485  3001               	movlw	1
  2360  0486  120A  118A  24DD  120A  118A  	fcall	_write_cmd
  2361  048B                     l96:
  2362  048B  0008               	return
  2363  048C                     __end_of_clear_display:
  2364                           
  2365                           	psect	text11
  2366  04DD                     __ptext11:	
  2367 ;; *************** function _write_cmd *****************
  2368 ;; Defined at:
  2369 ;;		line 5 in file "LcdDriver.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  cmd             1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  cmd             1    2[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         1       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 1
  2390 ;; This function calls:
  2391 ;;		_delay
  2392 ;; This function is called by:
  2393 ;;		_clear_display
  2394 ;;		_init_display
  2395 ;;		_move_cursor
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _write_cmd
  2401  04DD                     _write_cmd:
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _write_cmd: [wreg+status,2+status,0+pclath+cstack]
  2405                           ;write_cmd@cmd stored from wreg
  2406  04DD  00F2               	movwf	write_cmd@cmd
  2407  04DE                     l1336:
  2408                           
  2409                           ;LcdDriver.c: 5: void write_cmd(char cmd);LcdDriver.c: 6: {;LcdDriver.c: 8:     RA2 = 0;
  2410  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2411  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2412  04E0  1105               	bcf	5,2	;volatile
  2413                           
  2414                           ;LcdDriver.c: 9:     RA3 = 0;
  2415  04E1  1185               	bcf	5,3	;volatile
  2416                           
  2417                           ;LcdDriver.c: 10:     RA5 = 0;
  2418  04E2  1285               	bcf	5,5	;volatile
  2419                           
  2420                           ;LcdDriver.c: 13:     RA5 = 1;
  2421  04E3  1685               	bsf	5,5	;volatile
  2422  04E4                     l1338:
  2423                           
  2424                           ;LcdDriver.c: 14:     delay();
  2425  04E4  120A  118A  24A4  120A  118A  	fcall	_delay
  2426  04E9                     l1340:
  2427                           
  2428                           ;LcdDriver.c: 17:     PORTD = cmd;
  2429  04E9  0872               	movf	write_cmd@cmd,w
  2430  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2431  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2432  04EC  0088               	movwf	8	;volatile
  2433  04ED                     l1342:
  2434                           
  2435                           ;LcdDriver.c: 18:     delay();
  2436  04ED  120A  118A  24A4  120A  118A  	fcall	_delay
  2437  04F2                     l1344:
  2438                           
  2439                           ;LcdDriver.c: 21:     RA5 = 0;
  2440  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2441  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2442  04F4  1285               	bcf	5,5	;volatile
  2443  04F5                     l90:
  2444  04F5  0008               	return
  2445  04F6                     __end_of_write_cmd:
  2446                           
  2447                           	psect	text12
  2448  04A4                     __ptext12:	
  2449 ;; *************** function _delay *****************
  2450 ;; Defined at:
  2451 ;;		line 3 in file "Delay.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  i               2    0[COMMON] unsigned int 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         2       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         2       0       0       0       0
  2469 ;;Total ram usage:        2 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_write_cmd
  2475 ;;		_write_data
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _delay
  2481  04A4                     _delay:
  2482  04A4                     l1320:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _delay: [wreg+status,2]
  2485                           
  2486                           
  2487                           ;Delay.c: 5:     for (unsigned i=0; i<100; i++);
  2488  04A4  01F0               	clrf	delay@i
  2489  04A5  01F1               	clrf	delay@i+1
  2490  04A6                     l1326:
  2491  04A6  3001               	movlw	1
  2492  04A7  07F0               	addwf	delay@i,f
  2493  04A8  1803               	skipnc
  2494  04A9  0AF1               	incf	delay@i+1,f
  2495  04AA  3000               	movlw	0
  2496  04AB  07F1               	addwf	delay@i+1,f
  2497  04AC  3000               	movlw	0
  2498  04AD  0271               	subwf	delay@i+1,w
  2499  04AE  3064               	movlw	100
  2500  04AF  1903               	skipnz
  2501  04B0  0270               	subwf	delay@i,w
  2502  04B1  1C03               	skipc
  2503  04B2  2CB4               	goto	u351
  2504  04B3  2CB5               	goto	u350
  2505  04B4                     u351:
  2506  04B4  2CA6               	goto	l1326
  2507  04B5                     u350:
  2508  04B5                     l299:
  2509  04B5  0008               	return
  2510  04B6                     __end_of_delay:
  2511  007E                     btemp	set	126	;btemp
  2512  007E                     wtemp0	set	126
  2513                           
  2514                           	psect	config
  2515                           
  2516                           ;Config register CONFIG @ 0x2007
  2517                           ;	Oscillator Selection bits
  2518                           ;	FOSC = HS, HS oscillator
  2519                           ;	Watchdog Timer Enable bit
  2520                           ;	WDTE = OFF, WDT disabled
  2521                           ;	Power-up Timer Enable bit
  2522                           ;	PWRTE = ON, PWRT enabled
  2523                           ;	Brown-out Reset Enable bit
  2524                           ;	BOREN = OFF, BOR disabled
  2525                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2526                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2527                           ;	Data EEPROM Memory Code Protection bit
  2528                           ;	CPD = 0x1, unprogrammed default
  2529                           ;	Flash Program Memory Write Enable bits
  2530                           ;	WRT = 0x3, unprogrammed default
  2531                           ;	In-Circuit Debugger Mode bit
  2532                           ;	DEBUG = 0x1, unprogrammed default
  2533                           ;	Flash Program Memory Code Protection bit
  2534                           ;	CP = 0x1, unprogrammed default
  2535  2007                     	org	8199
  2536  2007  3F32               	dw	16178

Data Sizes:
    Strings     14
    Constant    0
    Data        45
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      72
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sp__getSecs	PTR unsigned char  size(1) Largest target is 3
		 -> getSecs@secs(COMMON[3]), 

    sp__getMins	PTR unsigned char  size(1) Largest target is 3
		 -> getMins@mins(COMMON[3]), 

    sp__getHour	PTR unsigned char  size(1) Largest target is 3
		 -> getHour@hr(COMMON[3]), 

    write_string_at_pos@text	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_write_string_at_pos
    _write_string_at_pos->_move_cursor
    _write_char_at_pos->_move_cursor
    _write_data->_delay
    _move_cursor->_delay_xy
    _init_display->_delay_xy
    _clear_display->_write_cmd
    _write_cmd->_delay

Critical Paths under _main in BANK0

    _main->_read_keys
    _write_string_at_pos->_move_cursor
    _write_char_at_pos->_move_cursor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7528
                                             26 BANK0      4     4      0
                      _clear_display
                           _delay_xy
                       _init_display
                      _init_keyboard
                          _read_keys
                  _write_char_at_pos
                _write_string_at_pos
 ---------------------------------------------------------------------------------
 (1) _write_string_at_pos                                  5     2      3    2163
                                             12 COMMON     2     2      0
                                              4 BANK0      3     0      3
                        _move_cursor
                             _strlen
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _write_char_at_pos                                    3     0      3    1972
                                              4 BANK0      3     0      3
                        _move_cursor
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _move_cursor                                          7     5      2    1708
                                              9 COMMON     3     1      2
                                              0 BANK0      4     4      0
                           _delay_xy
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _read_keys                                           30    30      0     549
                                              0 COMMON     4     4      0
                                              0 BANK0     26    26      0
 ---------------------------------------------------------------------------------
 (1) _init_keyboard                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1376
                           _delay_xy
                          _write_cmd
 ---------------------------------------------------------------------------------
 (3) _delay_xy                                             9     5      4    1308
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _clear_display                                        0     0      0      68
                          _write_cmd
 ---------------------------------------------------------------------------------
 (3) _write_cmd                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_display
     _write_cmd
       _delay
   _delay_xy
   _init_display
     _delay_xy
     _write_cmd
   _init_keyboard
   _read_keys
   _write_char_at_pos
     _move_cursor
       _delay_xy
       _write_cmd
     _write_data
       _delay
   _write_string_at_pos
     _move_cursor
     _strlen
     _write_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 18:13:56 2021

                           pc 0002                            l90 04F5                            l93 050E  
                          l96 048B                            _s1 005B                            _hr 0055  
                          fsr 0004                           l102 05AE                           l120 0704  
                         l105 04DC                           l108 05E8                           l302 056A  
                         l304 0556                           l305 054F                           l308 0578  
                         l260 0493                           l270 0734                           l271 079B  
                         l272 0747                           l273 075C                           l274 0771  
                         l276 07A4                           l277 07D3                           l278 07AD  
                         l279 07B6                           l299 04B5                           l848 052B  
                         _RA1 0029                           _RA2 002A                           _RB0 0030  
                         _RA3 002B                           _RB2 0032                           _RA5 002D  
                         _RB4 0034                           _RB5 0035                           _RE0 0048  
                         _RE1 0049                           _RC5 003D                           _RE2 004A  
                         _RC6 003E                           _RC7 003F                           _RD7 0047  
                         u400 06A6                           u401 06A5                           u410 06B4  
                         u411 06B3                           u500 07B1                           u420 06C1  
                         u501 07B0                           u421 06C0                           u405 06A2  
                         u350 04B5                           u510 07BA                           u430 0704  
                         u351 04B4                           u511 07B9                           u431 0703  
                         u415 06B0                           u360 0564                           u520 07D2  
                         u440 0525                           u600 0638                           u361 0563  
                         u521 07D1                           u425 06BD                           u441 0524  
                         u601 0637                           u370 0578                           u450 05AE  
                         u371 0577                           u435 0700                           u451 05AD  
                         u460 0711                           u380 066B                           u365 0560  
                         u525 07CE                           u381 066A                           u470 0726  
                         u390 0678                           u375 0574                           u391 0677  
                         u455 05AA                           u480 079F                           u481 079E  
                         u490 07A8                           u491 07A7                           u395 0674  
                         u590 0622                           u591 0621                           _s10 005D  
                         _min 0057                           _sec 0059                           fsr0 0004  
                         _tmp 005F                           indf 0000                          l1320 04A4  
                        l1400 0579                          l1330 054C                          l1410 048C  
                        l1402 0584                          l1340 04E9                          l1332 0550  
                        l1412 0490                          l1404 0587                          l1326 04A6  
                        l1342 04ED                          l1334 0564                          l1414 0491  
                        l1430 073E                          l1350 0501                          l1406 0596  
                        l1344 04F2                          l1336 04DE                          l1328 0549  
                        l1416 0492                          l1432 0742                          l1424 0709  
                        l1360 0667                          l1352 0504                          l1408 059C  
                        l1600 0612                          l1338 04E4                          l1434 074B  
                        l1426 0738                          l1442 0786                          l1418 0705  
                        l1370 0698                          l1362 066B                          l1354 0506  
                        l1346 04F7                          l1610 063F                          l1602 061C  
                        l1460 07BF                          l1452 07B1                          l1444 079F  
                        l1436 0760                          l1428 073A                          l1380 06DB  
                        l1364 0678                          l1372 06A7                          l1356 050B  
                        l1348 04FC                          l1604 0622                          l1612 0643  
                        l1462 07C5                          l1438 0775                          l1382 06EE  
                        l1374 06B4                          l1366 067D                          l1358 0654  
                        l1390 0519                          l1606 062F                          l1464 07D2  
                        l1456 07BA                          l1448 07A8                          l1384 06F6  
                        l1376 06C1                          l1368 0690                          l1392 0525  
                        l1608 0638                          l1378 06D4                          l1474 04C9  
                        l1386 0510                          l1396 05AF                          l1476 04D4  
                        l1388 0515                          l1398 0485                          l1590 05EF  
                        l1592 05F4                          l1584 05E9                          l1594 05F9  
                        l1586 05ED                          l1596 0607                          l1588 05EE  
                        l1598 060D                          l1698 078D                          STR_1 0009  
__size_of_write_string_at_pos 0036                          _hr10 0056                          _main 05E9  
                        _time 0046                          btemp 007E                          start 0000  
              write_data@data 0072                         ?_main 0070                         _PORTD 0008  
                       _TRISA 0085                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _delay 04A4                         _min10 0058  
                       _sec10 005A                         _hours 0067                         pclath 000A  
         move_cursor@position 0079                         status 0003                         wtemp0 007E  
           _write_char_at_pos 04C9               __initialization 07D4                  __end_of_main 0654  
          ?_write_char_at_pos 0024                        ??_main 003A           ??_write_char_at_pos 007C  
                      ?_delay 0070                        _ADCON1 009F                 ?_init_display 0070  
       __end_of_clear_display 048C     __end_of_write_char_at_pos 04DD                  ?_move_cursor 0079  
            __end_of_delay_xy 0579        __size_of_init_keyboard 0008                        delay@i 0070  
                      _hours1 0065                        _strlen 050F                ??_init_display 0079  
     __end_of__initialization 07FC                __pcstackCOMMON 0070                  __pidataBANK0 052C  
                __pidataBANK1 0494                 __end_of_delay 04B6           _write_string_at_pos 0579  
  write_char_at_pos@character 0026                       ??_delay 0070                 _init_keyboard 048C  
                  __pbssBANK0 005B          ?_write_string_at_pos 0024    __size_of_write_char_at_pos 0014  
          __size_of_read_keys 00CF                    __pmaintext 05E9                       ?_strlen 0070  
                   ?_delay_xy 0070                ?_init_keyboard 0070         ??_write_string_at_pos 007C  
                  __stringtab 0003                main@currentPos 003C            __size_of_write_cmd 0019  
        __size_of_move_cursor 00B1          __end_of_init_display 05E9                       __ptext1 0579  
                     __ptext2 050F                       __ptext3 04C9                       __ptext4 04F6  
                     __ptext5 0654                       __ptext6 0705                       __ptext7 048C  
                     __ptext8 05AF                       __ptext9 0549               __size_of_strlen 001D  
                     _hours10 0066             __end_of_read_keys 07D4                    ??_delay_xy 0074  
        end_of_initialization 07FC                       strlen@s 0073             __end_of_write_cmd 04F6  
             ??_init_keyboard 0070              move_cursor@i_124 0022                  write_cmd@cmd 0072  
     write_string_at_pos@text 0026   write_string_at_pos@position 0024                    _write_data 04F6  
      __size_of_clear_display 0007                __end_of_strlen 052C           start_initialization 07D4  
       __size_of_init_display 003A                    init_fetch0 04B6                   __pdataBANK0 003E  
                 __pdataBANK1 00A0                    read_keys@i 0030                      ??_strlen 0072  
                   ___latbits 0002                 __pcstackBANK0 0020             __size_of_delay_xy 0030  
                _init_display 05AF                 _clear_display 0485                   ?_write_data 0070  
          read_keys@swIndexes 0032                     __pstrings 0003          write_string_at_pos@i 007C  
 __end_of_write_string_at_pos 05AF                __size_of_delay 0012                     _read_keys 0705  
                   _minutes10 0064                     _seconds10 0062                ?_clear_display 0070  
                   delay_xy@i 0075                     delay_xy@j 0077                     delay_xy@x 0070  
                   delay_xy@y 0072                 ??_move_cursor 007B                   __stringbase 0008  
                   _write_cmd 04DD                    ?_read_keys 0070           __size_of_write_data 0019  
         __end_of_move_cursor 0705            __end_of__stringtab 0009               read_keys@keypad 0020  
                    _delay_xy 0549                      __ptext10 0485                      __ptext11 04DD  
                    __ptext12 04A4         __end_of_init_keyboard 0494                    ?_write_cmd 0070  
                move_cursor@i 0020               ??_clear_display 0073                 __size_of_main 006B  
                    _minutes1 0063                      _seconds1 0061                  getHour@F1086 0052  
                getMins@F1090 004F                      main@test 003B                  getSecs@F1094 004C  
                 _seconds1old 0060     write_char_at_pos@position 0024                      init_ram0 04BA  
                 ??_read_keys 0070                   _move_cursor 0654                     stringcode 0003  
                ??_write_data 0072                 read_keys@F883 00A0                 read_keys@F885 003E  
                    strlen@cp 0074                      stringdir 0003                      stringtab 0003  
                 ??_write_cmd 0072            __end_of_write_data 050F  
